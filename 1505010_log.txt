At line no: 1 type_specifier : INT

int

At line no: 1 type_specifier : INT

int

At line no: 1 parameter_list : type_specifier ID 

int su

At line no: 1 type_specifier : INT

int

At line no: 1 parameter_list : parameter_list COMMA type_specifier ID 

int su,int vu

New ScopeTable with id 2 created
At line no: 3 variable : ID 

su2

At line no: 3 variable : ID 

vu2

At line no: 3 factor : variable

vu2

	mov ax, vu2
	mov t0, ax


At line no: 3 unary_expression : factor 

t0

At line no: 3 term : unary_expression

t0

At line no: 3 simple_expression : term

t0

At line no: 3 rel_expression : simple_expression 

t0

At line no: 3 logic_expression : rel_expression 

t0

At line no: 3 expression : variable ASSIGNOP logic_expression 

su2=t0

	mov ax, vu2
	mov t0, ax
	mov ax, t0
	mov su2, ax


At line no: 3 expression_statement : expression SEMICOLON

su2=t0;

At line no: 3 statement : expression_statement 

su2=t0

At line no: 3 statements : statement

su2=t0

At line no: 4 compound_statement : LCURL statements RCURL 

{
su2=t0}

ScopeTable# 2 
14 -->  <su , ID> 
17 -->  <vu , ID> 



ScopeTable# 1 
18 -->  <fuu , ID> 


ScopeTable with id 2 removed
At line no: 4 func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement

int fuu(int su,int vu){
su2=t0}

	mov ax, vu2
	mov t0, ax
	mov ax, t0
	mov su2, ax


At line no: 4 unit : func_definition

int fuu(int su,int vu){
su2=t0}

At line no: 4 program : unit

int fuu(int su,int vu){
su2=t0}

At line no: 6 type_specifier : INT

int

New ScopeTable with id 3 created
At line no: 7 type_specifier : INT

int

At line no: 7 declaration_list : ID

a

At line no: 7 declaration_list : declaration_list COMMA ID 

a,c

At line no: 7 declaration_list : declaration_list COMMA ID 

a,c,i

At line no: 7 declaration_list : declaration_list COMMA ID 

a,c,i,j

At line no: 7 var_declaration : type_specifier declaration_list SEMICOLON

int a,c,i,j;


At line no: 7 statement : var_declaration

int a,c,i,j;


At line no: 7 statements : statement

int a,c,i,j;


At line no: 7 type_specifier : INT

int

At line no: 7 declaration_list : ID

d

At line no: 7 var_declaration : type_specifier declaration_list SEMICOLON

int d;


At line no: 7 statement : var_declaration

int d;


At line no: 7 statements : statements statement

int a,c,i,j;
int d;




At line no: 8 variable : ID 

a3

At line no: 8 factor : variable

a3

	mov ax, a3
	mov t1, ax


At line no: 8 unary_expression : factor 

t1

At line no: 8 term : unary_expression

t1

At line no: 8 simple_expression : term

t1

At line no: 8 rel_expression : simple_expression 

t1

At line no: 8 logic_expression : rel_expression 

t1

At line no: 8 arguments : logic_expression

t1

At line no: 8 variable : ID 

c3

At line no: 8 factor : variable

c3

	mov ax, c3
	mov t2, ax


At line no: 8 unary_expression : factor 

t2

At line no: 8 term : unary_expression

t2

At line no: 8 simple_expression : term

t2

At line no: 8 rel_expression : simple_expression 

t2

At line no: 8 logic_expression : rel_expression 

t2

At line no: 8 arguments : arguments COMMA logic_expression

t1,t2

At line no: 8 argument_list : arguments

t1,t2

At line no: 8 factor : ID LPAREN argument_list RPAREN

fuu(t1,t2)


	;push register data
	push ax
	push bx
	push cx
	push dx

	push t2
	push t1
	call fuu
	pop ax	;function's return value in ax register
	mov t3, ax
	pop dx
	pop cx
	pop bx
	pop ax


At line no: 8 unary_expression : factor 

t3

At line no: 8 term : unary_expression

t3

At line no: 8 simple_expression : term

t3

At line no: 8 rel_expression : simple_expression 

t3

At line no: 8 logic_expression : rel_expression 

t3

At line no: 8 expression : logic_expression 

t3

At line no: 8 expression_statement : expression SEMICOLON

t3;

At line no: 8 statement : expression_statement 

t3

At line no: 8 statements : statements statement

int a,c,i,j;
int d;
t3


	;push register data
	push ax
	push bx
	push cx
	push dx

	push t2
	push t1
	call fuu
	pop ax	;function's return value in ax register
	mov t3, ax
	pop dx
	pop cx
	pop bx
	pop ax


At line no: 9 factor : CONST_INT 

0

At line no: 9 unary_expression : factor 

0

At line no: 9 term : unary_expression

0

At line no: 9 simple_expression : term

0

At line no: 9 rel_expression : simple_expression 

0

At line no: 9 logic_expression : rel_expression 

0

At line no: 9 expression : logic_expression 

0

At line no: 9 statement : RETURN expression SEMICOLON 

return 0;


At line no: 9 statements : statements statement

int a,c,i,j;
int d;
t3return 0;



	;push register data
	push ax
	push bx
	push cx
	push dx

	push t2
	push t1
	call fuu
	pop ax	;function's return value in ax register
	mov t3, ax
	pop dx
	pop cx
	pop bx
	pop ax


At line no: 10 compound_statement : LCURL statements RCURL 

{
int a,c,i,j;
int d;
t3return 0;
}

ScopeTable# 3 
1 -->  <c , ID> 
7 -->  <i , ID> 
12 -->  <d , ID> 
18 -->  <j , ID> 
19 -->  <a , ID> 



ScopeTable# 1 
3 -->  <main , ID> 
18 -->  <fuu , ID> 


ScopeTable with id 3 removed
At line no: 10 func_definition : type_specifier ID LPAREN RPAREN compound_statement

int main(){
int a,c,i,j;
int d;
t3return 0;
}


	;push register data
	push ax
	push bx
	push cx
	push dx

	push t2
	push t1
	call fuu
	pop ax	;function's return value in ax register
	mov t3, ax
	pop dx
	pop cx
	pop bx
	pop ax


At line no: 10 unit : func_definition

int main(){
int a,c,i,j;
int d;
t3return 0;
}

At line no: 10 program : program unit

int fuu(int su,int vu){
su2=t0}int main(){
int a,c,i,j;
int d;
t3return 0;
}


	;push register data
	push ax
	push bx
	push cx
	push dx

	push t2
	push t1
	call fuu
	pop ax	;function's return value in ax register
	mov t3, ax
	pop dx
	pop cx
	pop bx
	pop ax


	Symbol Table: 

ScopeTable# 1 
3 -->  <main , ID> 
18 -->  <fuu , ID> 


Total Lines: 11

Total Errors: 2

