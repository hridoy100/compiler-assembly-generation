At line no: 1 type_specifier : INT

int

New ScopeTable with id 2 created
At line no: 2 type_specifier : INT

int

At line no: 2 declaration_list : ID

a

At line no: 2 declaration_list : declaration_list COMMA ID 

a,b

At line no: 2 declaration_list : declaration_list COMMA ID 

a,b,i

At line no: 2 var_declaration : type_specifier declaration_list SEMICOLON

int a,b,i;


At line no: 2 statement : var_declaration

int a,b,i;


At line no: 2 statements : statement

int a,b,i;


At line no: 3 variable : ID 

b2

At line no: 3 factor : CONST_INT 

0

At line no: 3 unary_expression : factor 

0

At line no: 3 term : unary_expression

0

At line no: 3 simple_expression : term

0

At line no: 3 rel_expression : simple_expression 

0

At line no: 3 logic_expression : rel_expression 

0

At line no: 3 expression : variable ASSIGNOP logic_expression 

b2=0

	mov ax, 0
	mov b2, ax


At line no: 3 expression_statement : expression SEMICOLON

b2=0;

At line no: 3 statement : expression_statement 

b2=0

At line no: 3 statements : statements statement

int a,b,i;
b2=0

	mov ax, 0
	mov b2, ax


At line no: 4 variable : ID 

i2

At line no: 4 factor : CONST_INT 

0

At line no: 4 unary_expression : factor 

0

At line no: 4 term : unary_expression

0

At line no: 4 simple_expression : term

0

At line no: 4 rel_expression : simple_expression 

0

At line no: 4 logic_expression : rel_expression 

0

At line no: 4 expression : variable ASSIGNOP logic_expression 

i2=0

	mov ax, 0
	mov i2, ax


At line no: 4 expression_statement : expression SEMICOLON

i2=0;

At line no: 4 variable : ID 

i2

At line no: 4 factor : variable

i2

	mov ax, i2
	mov t0, ax


At line no: 4 unary_expression : factor 

t0

At line no: 4 term : unary_expression

t0

At line no: 4 simple_expression : term

t0

At line no: 4 factor : CONST_INT 

4

At line no: 4 unary_expression : factor 

4

At line no: 4 term : unary_expression

4

At line no: 4 simple_expression : term

4

At line no: 4 rel_expression : simple_expression RELOP simple_expression 

t0<4

	mov ax, i2
	mov t0, ax
	mov ax, t0
	cmp ax, 4
	jl L0
	mov t1, 0
	jmp L1
L0:
	mov t1, 1
L1:


At line no: 4 logic_expression : rel_expression 

t1

At line no: 4 expression : logic_expression 

t1

At line no: 4 expression_statement : expression SEMICOLON

t1;

At line no: 4 variable : ID 

i2

At line no: 4 factor : variable INCOP 

i2

At line no: 4 unary_expression : factor 

t2

At line no: 4 term : unary_expression

t2

At line no: 4 simple_expression : term

t2

At line no: 4 rel_expression : simple_expression 

t2

At line no: 4 logic_expression : rel_expression 

t2

At line no: 4 expression : logic_expression 

t2

At line no: 5 variable : ID 

a2

At line no: 5 factor : CONST_INT 

3

At line no: 5 unary_expression : factor 

3

At line no: 5 term : unary_expression

3

At line no: 5 simple_expression : term

3

At line no: 5 rel_expression : simple_expression 

3

At line no: 5 logic_expression : rel_expression 

3

At line no: 5 expression : variable ASSIGNOP logic_expression 

a2=3

	mov ax, 3
	mov a2, ax


At line no: 5 expression_statement : expression SEMICOLON

a2=3;

At line no: 5 statement : expression_statement 

a2=3

At line no: 5 statements : statement

a2=3

At line no: 6 variable : ID 

a2

At line no: 6 factor : variable DECOP 

a2

	mov ax, a2
	dec ax
	mov t3, ax

At line no: 6 unary_expression : factor 

t3

At line no: 6 term : unary_expression

t3

At line no: 6 simple_expression : term

t3

At line no: 6 rel_expression : simple_expression 

t3

At line no: 6 logic_expression : rel_expression 

t3

At line no: 6 expression : logic_expression 

t3

At line no: 7 variable : ID 

b2

At line no: 7 factor : variable INCOP 

b2

At line no: 7 unary_expression : factor 

t4

At line no: 7 term : unary_expression

t4

At line no: 7 simple_expression : term

t4

At line no: 7 rel_expression : simple_expression 

t4

At line no: 7 logic_expression : rel_expression 

t4

At line no: 7 expression : logic_expression 

t4

At line no: 7 expression_statement : expression SEMICOLON

t4;

At line no: 7 statement : expression_statement 

t4

At line no: 7 statements : statement

t4

At line no: 8 compound_statement : LCURL statements RCURL 

{
t4}

At line no: 8 statement : compound_statement 

{
t4}

At line no: 8 statement : WHILE LPAREN expression RPAREN statement 

while(t3){
t4}

At line no: 8 statements : statements statement

a2=3while(t3){
t4}

	mov ax, 3
	mov a2, ax
	mov ax, a2
	dec ax
	mov t3, axL2:		;WHILE
	cmp t3, 0 	
	je L3	;END WHILE
	mov ax, b2
	inc ax
	mov t4, ax	
	mov ax, a2
	dec ax
	mov t3, axL2:		;WHILE
	cmp t3, 0 	
	je L3	;END WHILE
	mov ax, b2
	inc ax
	mov t4, ax	
	
	jmp L2	;WHILE
L3:	;END WHILE


At line no: 9 compound_statement : LCURL statements RCURL 

{
a2=3while(t3){
t4}}

At line no: 9 statement : compound_statement 

{
a2=3while(t3){
t4}}

At line no: 9 statement : FOR LPAREN expression_statement expression_statement expression RPAREN statement 

for(i2=0; t1; t2){
a2=3while(t3){
t4}}

	mov ax, 0
	mov i2, ax
L4:		;FOR
	mov ax, i2
	mov t0, ax
	mov ax, t0
	cmp ax, 4
	jl L0
	mov t1, 0
	jmp L1
L0:
	mov t1, 1
L1:
	cmp t1, 0 	
	je L5	;END FOR
	mov ax, 3
	mov a2, ax
	mov ax, a2
	dec ax
	mov t3, axL2:		;WHILE
	cmp t3, 0 	
	je L3	;END WHILE
	mov ax, b2
	inc ax
	mov t4, ax	
	mov ax, a2
	dec ax
	mov t3, axL2:		;WHILE
	cmp t3, 0 	
	je L3	;END WHILE
	mov ax, b2
	inc ax
	mov t4, ax	
	
	jmp L2	;WHILE
L3:	;END WHILE
	
	mov ax, i2
	inc ax
	mov t2, ax	
	jmp L4	;FOR
L5:	;END FOR


At line no: 9 statements : statements statement

int a,b,i;
b2=0for(i2=0; t1; t2){
a2=3while(t3){
t4}}

	mov ax, 0
	mov b2, ax
	mov ax, 0
	mov i2, ax
L4:		;FOR
	mov ax, i2
	mov t0, ax
	mov ax, t0
	cmp ax, 4
	jl L0
	mov t1, 0
	jmp L1
L0:
	mov t1, 1
L1:
	cmp t1, 0 	
	je L5	;END FOR
	mov ax, 3
	mov a2, ax
	mov ax, a2
	dec ax
	mov t3, axL2:		;WHILE
	cmp t3, 0 	
	je L3	;END WHILE
	mov ax, b2
	inc ax
	mov t4, ax	
	mov ax, a2
	dec ax
	mov t3, axL2:		;WHILE
	cmp t3, 0 	
	je L3	;END WHILE
	mov ax, b2
	inc ax
	mov t4, ax	
	
	jmp L2	;WHILE
L3:	;END WHILE
	
	mov ax, i2
	inc ax
	mov t2, ax	
	jmp L4	;FOR
L5:	;END FOR


At line no: 10 statement : PRINTLN LPAREN ID RPAREN SEMICOLON

println(a);


At line no: 10 statements : statements statement

int a,b,i;
b2=0for(i2=0; t1; t2){
a2=3while(t3){
t4}}println(a);


	mov ax, 0
	mov b2, ax
	mov ax, 0
	mov i2, ax
L4:		;FOR
	mov ax, i2
	mov t0, ax
	mov ax, t0
	cmp ax, 4
	jl L0
	mov t1, 0
	jmp L1
L0:
	mov t1, 1
L1:
	cmp t1, 0 	
	je L5	;END FOR
	mov ax, 3
	mov a2, ax
	mov ax, a2
	dec ax
	mov t3, axL2:		;WHILE
	cmp t3, 0 	
	je L3	;END WHILE
	mov ax, b2
	inc ax
	mov t4, ax	
	mov ax, a2
	dec ax
	mov t3, axL2:		;WHILE
	cmp t3, 0 	
	je L3	;END WHILE
	mov ax, b2
	inc ax
	mov t4, ax	
	
	jmp L2	;WHILE
L3:	;END WHILE
	
	mov ax, i2
	inc ax
	mov t2, ax	
	jmp L4	;FOR
L5:	;END FOR
	MOV AH,2
	MOV DL,0Dh
	INT 21H
	MOV DL,0Ah
	INT 21H
L6: 		;PRINT
	mov ax, a2

	CALL OUTDEC
	MOV AH,2
	MOV DL,0Dh
	INT 21H
	MOV DL,0Ah
	INT 21H


At line no: 11 statement : PRINTLN LPAREN ID RPAREN SEMICOLON

println(b);


At line no: 11 statements : statements statement

int a,b,i;
b2=0for(i2=0; t1; t2){
a2=3while(t3){
t4}}println(a);
println(b);


	mov ax, 0
	mov b2, ax
	mov ax, 0
	mov i2, ax
L4:		;FOR
	mov ax, i2
	mov t0, ax
	mov ax, t0
	cmp ax, 4
	jl L0
	mov t1, 0
	jmp L1
L0:
	mov t1, 1
L1:
	cmp t1, 0 	
	je L5	;END FOR
	mov ax, 3
	mov a2, ax
	mov ax, a2
	dec ax
	mov t3, axL2:		;WHILE
	cmp t3, 0 	
	je L3	;END WHILE
	mov ax, b2
	inc ax
	mov t4, ax	
	mov ax, a2
	dec ax
	mov t3, axL2:		;WHILE
	cmp t3, 0 	
	je L3	;END WHILE
	mov ax, b2
	inc ax
	mov t4, ax	
	
	jmp L2	;WHILE
L3:	;END WHILE
	
	mov ax, i2
	inc ax
	mov t2, ax	
	jmp L4	;FOR
L5:	;END FOR
	MOV AH,2
	MOV DL,0Dh
	INT 21H
	MOV DL,0Ah
	INT 21H
L6: 		;PRINT
	mov ax, a2

	CALL OUTDEC
	MOV AH,2
	MOV DL,0Dh
	INT 21H
	MOV DL,0Ah
	INT 21H
	MOV AH,2
	MOV DL,0Dh
	INT 21H
	MOV DL,0Ah
	INT 21H
L7: 		;PRINT
	mov ax, b2

	CALL OUTDEC
	MOV AH,2
	MOV DL,0Dh
	INT 21H
	MOV DL,0Ah
	INT 21H


At line no: 12 statement : PRINTLN LPAREN ID RPAREN SEMICOLON

println(c);


At line no: 12 statements : statements statement

int a,b,i;
b2=0for(i2=0; t1; t2){
a2=3while(t3){
t4}}println(a);
println(b);
println(c);


	mov ax, 0
	mov b2, ax
	mov ax, 0
	mov i2, ax
L4:		;FOR
	mov ax, i2
	mov t0, ax
	mov ax, t0
	cmp ax, 4
	jl L0
	mov t1, 0
	jmp L1
L0:
	mov t1, 1
L1:
	cmp t1, 0 	
	je L5	;END FOR
	mov ax, 3
	mov a2, ax
	mov ax, a2
	dec ax
	mov t3, axL2:		;WHILE
	cmp t3, 0 	
	je L3	;END WHILE
	mov ax, b2
	inc ax
	mov t4, ax	
	mov ax, a2
	dec ax
	mov t3, axL2:		;WHILE
	cmp t3, 0 	
	je L3	;END WHILE
	mov ax, b2
	inc ax
	mov t4, ax	
	
	jmp L2	;WHILE
L3:	;END WHILE
	
	mov ax, i2
	inc ax
	mov t2, ax	
	jmp L4	;FOR
L5:	;END FOR
	MOV AH,2
	MOV DL,0Dh
	INT 21H
	MOV DL,0Ah
	INT 21H
L6: 		;PRINT
	mov ax, a2

	CALL OUTDEC
	MOV AH,2
	MOV DL,0Dh
	INT 21H
	MOV DL,0Ah
	INT 21H
	MOV AH,2
	MOV DL,0Dh
	INT 21H
	MOV DL,0Ah
	INT 21H
L7: 		;PRINT
	mov ax, b2

	CALL OUTDEC
	MOV AH,2
	MOV DL,0Dh
	INT 21H
	MOV DL,0Ah
	INT 21H


At line no: 13 compound_statement : LCURL statements RCURL 

{
int a,b,i;
b2=0for(i2=0; t1; t2){
a2=3while(t3){
t4}}println(a);
println(b);
println(c);
}

ScopeTable# 2 
7 -->  <i , ID> 
10 -->  <b , ID> 
19 -->  <a , ID> 



ScopeTable# 1 
3 -->  <main , ID> 


ScopeTable with id 2 removed
At line no: 13 func_definition : type_specifier ID LPAREN RPAREN compound_statement

int main(){
int a,b,i;
b2=0for(i2=0; t1; t2){
a2=3while(t3){
t4}}println(a);
println(b);
println(c);
}

	mov ax, 0
	mov b2, ax
	mov ax, 0
	mov i2, ax
L4:		;FOR
	mov ax, i2
	mov t0, ax
	mov ax, t0
	cmp ax, 4
	jl L0
	mov t1, 0
	jmp L1
L0:
	mov t1, 1
L1:
	cmp t1, 0 	
	je L5	;END FOR
	mov ax, 3
	mov a2, ax
	mov ax, a2
	dec ax
	mov t3, axL2:		;WHILE
	cmp t3, 0 	
	je L3	;END WHILE
	mov ax, b2
	inc ax
	mov t4, ax	
	mov ax, a2
	dec ax
	mov t3, axL2:		;WHILE
	cmp t3, 0 	
	je L3	;END WHILE
	mov ax, b2
	inc ax
	mov t4, ax	
	
	jmp L2	;WHILE
L3:	;END WHILE
	
	mov ax, i2
	inc ax
	mov t2, ax	
	jmp L4	;FOR
L5:	;END FOR
	MOV AH,2
	MOV DL,0Dh
	INT 21H
	MOV DL,0Ah
	INT 21H
L6: 		;PRINT
	mov ax, a2

	CALL OUTDEC
	MOV AH,2
	MOV DL,0Dh
	INT 21H
	MOV DL,0Ah
	INT 21H
	MOV AH,2
	MOV DL,0Dh
	INT 21H
	MOV DL,0Ah
	INT 21H
L7: 		;PRINT
	mov ax, b2

	CALL OUTDEC
	MOV AH,2
	MOV DL,0Dh
	INT 21H
	MOV DL,0Ah
	INT 21H


At line no: 13 unit : func_definition

int main(){
int a,b,i;
b2=0for(i2=0; t1; t2){
a2=3while(t3){
t4}}println(a);
println(b);
println(c);
}

At line no: 13 program : unit

int main(){
int a,b,i;
b2=0for(i2=0; t1; t2){
a2=3while(t3){
t4}}println(a);
println(b);
println(c);
}

	Symbol Table: 

ScopeTable# 1 
3 -->  <main , ID> 


Total Lines: 14

Total Errors: 3

